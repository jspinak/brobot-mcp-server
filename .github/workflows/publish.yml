name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        type: string

permissions:
  contents: read
  id-token: write  # For PyPI trusted publishing

jobs:
  build-python:
    name: Build Python Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build server package
        run: python -m build
      
      - name: Build client package
        run: |
          cd brobot_client
          python -m build
      
      - name: Check distributions
        run: |
          twine check dist/*
          cd brobot_client && twine check dist/*
      
      - name: Upload server artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-server-dist
          path: dist/
      
      - name: Upload client artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-client-dist
          path: brobot_client/dist/

  build-java:
    name: Build Java CLI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Build with Gradle
        run: |
          cd brobot-cli
          ./gradlew clean shadowJar
      
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: brobot-cli-jar
          path: brobot-cli/build/libs/*.jar

  publish-pypi:
    name: Publish to PyPI
    needs: [build-python]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/brobot-mcp-server
    steps:
      - name: Download server artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-server-dist
          path: dist/
      
      - name: Download client artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-client-dist
          path: client-dist/
      
      - name: Publish server to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
      
      - name: Publish client to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: client-dist/

  publish-docker:
    name: Publish Docker Image
    needs: [build-python, build-java]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: brobot-cli-jar
          path: brobot-cli/build/libs/
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/brobot-mcp-server
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-github-release:
    name: Create GitHub Release Assets
    needs: [build-python, build-java]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Create release archives
        run: |
          # Create server archive
          tar -czf brobot-mcp-server-${{ github.event.release.tag_name || github.event.inputs.version }}.tar.gz \
            -C python-server-dist .
          
          # Create client archive
          tar -czf brobot-client-${{ github.event.release.tag_name || github.event.inputs.version }}.tar.gz \
            -C python-client-dist .
          
          # Copy JAR with version
          cp brobot-cli-jar/*.jar brobot-cli-${{ github.event.release.tag_name || github.event.inputs.version }}.jar
      
      - name: Upload release assets
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            brobot-mcp-server-*.tar.gz
            brobot-client-*.tar.gz
            brobot-cli-*.jar
          fail_on_unmatched_files: true